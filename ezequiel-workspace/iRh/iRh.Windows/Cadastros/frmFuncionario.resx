<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mUqmAKnWAAAAAElFTkSuQmCC
</value>
  </data>
</root>